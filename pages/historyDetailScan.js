import React, { useState, useEffect } from "react";
import { StyleSheet, Text, View, TouchableOpacity, Image } from "react-native";
import { useNavigation, useRoute } from "@react-navigation/native";
import { SafeAreaView } from "react-native-safe-area-context";
import ConfirmReportModal from "../components/confirmReport";

export default function HistoryDetailScan() {
  const navigation = useNavigation();
  const [confirmReport, setConfirmReport] = useState(false);
  const [scannedId, setScannedId] = useState(null);
  const [reportStatus, setReportStatus] = useState(null);

  const getStatusColor = (status) => {
    switch (status) {
      case "MALICIOUS":
      case "FAILED":
        return "#FF0000";
      case "SAFE":
      case "SUCCESS":
        return "#009F2C";
      case "NOT THAT SAFE":
        return "#FF0000";
      default:
        return "black";
    }
  };

  const handleBack = () => {
    navigation.goBack();
  };
  useEffect(() => {
    // Update data after confirming report
    if (id) {
      setReportStatus(report);
    }
  }, [id]);
  const route = useRoute();
  const {
    id,
    url,
    status,
    malware_detected,
    malware_detected_tool,
    verify_qr_legitimacy,
    scanned_at,
    report,
  } = route.params;

  // Format scanned_at date
  const formattedDate = new Date(scanned_at);
  const formattedDateString = formattedDate.toLocaleDateString("en-US", {
    month: "short",
    day: "2-digit",
    year: "numeric",
  });
  const formattedTime = formattedDate.toLocaleTimeString("en-US", {
    hour: "numeric",
    minute: "2-digit",
    hour12: true,
  });
  const formattedDay = formattedDate.toLocaleDateString("en-US", {
    weekday: "short",
  });

  return (
    <SafeAreaView style={styles.container}>
      <View style={styles.sideHeader}>
        <TouchableOpacity onPress={handleBack} style={styles.logoContainer}>
          <Image
            source={require("../assets/logo/backIcon.png")}
            style={styles.logo2}
          />
        </TouchableOpacity>
        <Text style={styles.headerText}>Details</Text>
      </View>

      <View style={styles.details}>
        <Text style={styles.textStyle}>URL:</Text>
        <View style={styles.resultBody}>
          <Text
            style={[styles.textResult, { textDecorationLine: "underline" }]}
          >
            {url}
          </Text>
        </View>
        <Text style={styles.textStyle}>Date Scanned:</Text>
        <View style={styles.resultBody}>
          <Text style={styles.textResult}>
            {formattedDay}, {formattedDateString}, {formattedTime}
          </Text>
        </View>

        <Text style={styles.textStyle}>Status:</Text>
        <View style={styles.resultBody}>
          <Text
            style={[
              styles.textResult,
              {
                color: getStatusColor(status),
                fontSize: 24,
                fontWeight: "bold",
              },
            ]}
          >
            {status}
          </Text>
        </View>
        {status !== "SAFE" && (
          <View style={styles.malware_container}>
            <Text style={styles.textStyle}>Malware Detected:</Text>
            <View style={styles.resultBody}>
              <Text
                style={[
                  styles.textResult,
                  {
                    color:
                      malware_detected && malware_detected.length > 3
                        ? "#FF0000"
                        : "#009F2C",
                  },
                ]}
              >
                {malware_detected && malware_detected.length > 3
                  ? malware_detected.replace(/[\[\]']+/g, "")
                  : "0 Malicious Found"}
              </Text>
            </View>
            <Text style={styles.textStyle}>Detected By:</Text>
            <View style={styles.resultBody}>
              <Text
                style={[
                  styles.textResult,
                  {
                    color:
                      malware_detected_tool && malware_detected_tool.length > 3
                        ? "#FF0000"
                        : "#009F2C",
                  },
                ]}
              >
                {malware_detected_tool && malware_detected_tool.length > 3
                  ? malware_detected_tool.replace(/[\[\]']+/g, "")
                  : "0 Malicious Found"}
              </Text>
            </View>
            {reportStatus === "No" && (
              <TouchableOpacity
                style={styles.Button}
                onPress={() => setConfirmReport(true)}
              >
                <Text style={styles.buttonText}>Report URL</Text>
              </TouchableOpacity>
            )}
          </View>
        )}
        <Text style={styles.textStyle}>Generated By:</Text>
        <View style={styles.resultBody}>
          <Text
            style={[
              styles.textResult,
              {
                color: getStatusColor(status),
                fontSize: 20,
                fontWeight: "bold",
              },
            ]}
          >
            {verify_qr_legitimacy}
          </Text>
        </View>
        {reportStatus === "Yes" && (
          <View style={styles.reportStyle}>
            <Text>
              This link has been reported to{" "}
              <Text style={{ color: "red", fontWeight: "bold" }}>NCert-PH</Text>
            </Text>
          </View>
        )}
      </View>
      {confirmReport && (
        <ConfirmReportModal
          visible={confirmReport}
          onCancel={() => setConfirmReport(false)}
          onConfirm={(status) => {
            setConfirmReport(false);
            setScannedId(id);
            setReportStatus(status);
          }}
          scannedId={id}
          reportStatus={reportStatus}
        />
      )}
    </SafeAreaView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "white",
    alignItems: "center",
  },
  sideHeader: {
    flexDirection: "row",
    alignItems: "center",
    backgroundColor: "#0B8F87",
    padding: 10,
    width: "100%",
    zIndex: 1,
  },
  logoContainer: {
    marginRight: 10,
  },
  headerText: {
    color: "white",
    fontSize: 27,
    fontWeight: "bold",
  },
  details: {
    flex: 1,
    justifyContent: "top",
    alignItems: "left",
    borderColor: "#0B8F87",
    borderWidth: 2,
    width: "80%",
    marginBottom: 20,
    marginTop: 20,
    padding: 20,
  },
  textStyle: {
    fontSize: 20,
    fontWeight: "bold",
  },
  resultBody: {
    marginLeft: 40,
    width: 215,
  },
  Button: {
    flexDirection: "row",
    width: 130,
    height: 30,
    borderRadius: 10,
    bottom: -150,
    justifyContent: "center",
    alignItems: "center",
    backgroundColor: "red",
    padding: 5,
    marginLeft: "22%",
  },
  buttonText: {
    color: "white",
    fontSize: 14,
    fontWeight: "bold",
  },
  textResult: {
    fontSize: 18,
  },
  reportStyle: {
    bottom: -70,
    alignContent: "center",
    alignItems: "center",
  },
});
